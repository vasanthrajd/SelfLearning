<?xml version="1.0" encoding="UTF-8"?>
<beans  
    xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
               http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.1.xsd" >
	
	
	<context:annotation-config/>
	<context:component-scan base-package="SpringJDBC.DAO"  />
	
	
	
	<!-- It is connection DataSource without any Connection Pool. 
		 If we need to have the connection pool, then we need to implement it with dpcp jara
		 Which will be responsible for having the connection pool.
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.apache.derby.jdbc.ClientDriver" />
		<property name="url" value="jdbc:derby://localhost:1527/db;create=true" />
	</bean>-->
	 
	 
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="org.apache.derby.jdbc.ClientDriver" />
		<property name="url" value="jdbc:derby://localhost:1527/db;create=true" />
		 <property name="initialSize" value="2" />
		<property name="maxActive" value="5" /> 
	</bean> 
	
	<bean id="simpleDAOImpl" class="SpringJDBC.DAO.SimpleDAOImpl">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.AnnotationSessionFactoryBean" >
		<property name="dataSource" ref="dataSource"  />
		<property name="packagesToScan" value="SpringJDBC.Model" />
		<property name="hibernateProperties">
			<props>
				<prop key="dialect">org.hibernate.dialect.DerbyDialect</prop>
			</props>
		</property>
	</bean> 
	<!-- 
	<bean id="hibernateDaoImpl" class="SpringJDBC.DAO.HibernateDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>-->
	 
</beans>